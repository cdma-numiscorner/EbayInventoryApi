<?php
/**
 * InventoryItemListingTest
 *
 * PHP version 7.4
 *
 * @category Class
 * @package  OpenAPI\EbayInventoryClient
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * Inventory API
 *
 * The Inventory API is used to create and manage inventory, and then to publish and manage this inventory on an eBay marketplace. There are also methods in this API that will convert eligible, active eBay listings into the Inventory API model.
 *
 * The version of the OpenAPI document: 1.16.1
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 6.3.0-SNAPSHOT
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the model.
 */

namespace OpenAPI\EbayInventoryClient\Test\Model;

use PHPUnit\Framework\TestCase;

/**
 * InventoryItemListingTest Class Doc Comment
 *
 * @category    Class
 * @description This type is used by the &lt;strong&gt;inventoryItems&lt;/strong&gt; container that is returned in the response of the &lt;strong&gt;bulkMigrateListing&lt;/strong&gt; call. Up to five &lt;strong&gt;sku&lt;/strong&gt;/&lt;strong&gt;offerId&lt;/strong&gt; pairs may be returned under the &lt;strong&gt;inventoryItems&lt;/strong&gt; container, dependent on how many eBay listings the seller is attempting to migrate to the inventory model.
 * @package     OpenAPI\EbayInventoryClient
 * @author      OpenAPI Generator team
 * @link        https://openapi-generator.tech
 */
class InventoryItemListingTest extends TestCase
{

    /**
     * Setup before running any test case
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test "InventoryItemListing"
     */
    public function testInventoryItemListing()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "offer_id"
     */
    public function testPropertyOfferId()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test attribute "sku"
     */
    public function testPropertySku()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
